{"version":3,"sources":["components/Button.js","components/Input.js","components/Form.js","components/Numbers.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Button","text","submitHandler","type","onClick","Input","value","changeHandler","onChange","Form","newName","newNumber","handleNameChange","handleNumberChange","handleSubmit","Numbers","persons","handleDelete","map","person","key","id","name","number","Notification","message","color","notificationStyle","backgroundColor","border","style","baseUrl","newObject","axios","post","then","response","data","get","delete","put","App","useState","setPersons","filter","setFilter","filteredPersons","setFilteredPersons","setNewName","setNewNumber","notification","setNotification","notificationColor","setNotificationColor","useEffect","personService","initialPersons","oldPerson","window","confirm","resetInputs","e","target","includes","preventDefault","some","find","updatedPerson","returnedPerson","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a874c8a7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Button = ({ text, submitHandler }) => {\n  return (\n    <div>\n      <button type='submit' onClick={submitHandler}>{text}</button>\n    </div>\n  )\n}\n\nexport default Button","import React from 'react'\n\nconst Input = ({ text, value, changeHandler }) => {\n  return (\n    <div>\n      {text}: <input value={value} onChange={changeHandler} />\n    </div>\n  )\n}\n\nexport default Input","import React from 'react'\nimport Button from './Button'\nimport Input from './Input'\n\nconst Form = ({ newName, newNumber, handleNameChange, handleNumberChange, handleSubmit }) => {\n  return (\n    <form>\n      <Input text='Name' value={newName} changeHandler={handleNameChange} />\n      <Input text='Number' value={newNumber} changeHandler={handleNumberChange} />\n      <Button text='Add' submitHandler={handleSubmit} />\n    </form>\n  )\n}\n\nexport default Form","import React from 'react'\n\nconst Numbers = ({ persons, handleDelete }) => {\n  return (\n    persons.map(person => \n      <div key={person.id}>\n        {person.name} {person.number} <button onClick={() => handleDelete(person)}>Delete</button>\n      </div>\n    )\n  )\n} \n\nexport default Numbers","import React from 'react'\n\nconst Notification = ({ message, color }) => {\n  const notificationStyle = {\n    color,\n    backgroundColor: 'lightgrey',\n    border: `1px solid ${color}`\n  }\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { create, getAll, remove, update }","import React, { useState, useEffect } from 'react'\nimport Form from './components/Form'\nimport Input from './components/Input'\nimport Numbers from './components/Numbers'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ filter, setFilter ] = useState('')\n  const [ filteredPersons, setFilteredPersons] = useState(persons)\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ notificationColor, setNotificationColor ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleDelete = oldPerson => {\n    const confirmed = window.confirm(`Delete ${oldPerson.name}?`)\n\n    if (confirmed) {\n      personService\n        .remove(oldPerson.id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== oldPerson.id))\n          setFilter('')\n        })\n    }\n  }\n\n  const handleFilterChange = e => {\n    const filter = e.target.value\n\n    setFilter(filter)\n    setFilteredPersons(persons.filter(person => person.name.includes(filter)))\n  }\n\n  const handleNameChange = e => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    if (persons.some(person => person.name === newName)) {\n      // Is the person already added\n      const shouldReplace = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      if (shouldReplace) {\n        // Update old\n        const person = persons.find(person => person.name === newName)\n        const updatedPerson = { ...person, number: newNumber }\n\n        personService\n          .update(person.id, updatedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id === returnedPerson.id ? returnedPerson : person))\n            resetInputs()\n            setNotificationColor('green')\n            setNotification(`Updated ${newName}`)\n            setTimeout(() => setNotification(null), 3000)\n          })\n          .catch(error => {\n            setNotificationColor('red')\n            setNotification(error.response.data.error)\n            setTimeout(() => setNotification(null), 3000)\n          })\n      } else {\n        return\n      }\n    } else {\n      // If not, add new\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      }\n\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons([ ...persons, returnedPerson ])\n          resetInputs()\n          setNotificationColor('green')\n          setNotification(`Added ${newName}`)\n          setTimeout(() => setNotification(null), 3000)\n        })\n        .catch(error => {\n          setNotificationColor('red')\n          setNotification(error.response.data.error)\n          setTimeout(() => setNotification(null), 3000)\n        })\n    }\n  }\n\n  const resetInputs = () => {\n    setFilter('')\n    setNewName('')\n    setNewNumber('')\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} color={notificationColor} /> \n      <Input text='Filter shown with' value={filter} changeHandler={handleFilterChange} />\n      <h2>Add a new</h2>\n      <Form \n        newName={newName} \n        newNumber={newNumber} \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      {filter === '' ?\n       <Numbers persons={persons} handleDelete={handleDelete} /> :\n       <Numbers persons={filteredPersons} handleDelete={handleDelete} />\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}